@model Dinner.Models.Couple
<div>
    <h4>About us...</h4>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Age,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = " - - Age - - " },
                       new SelectListItem { Value = "1" , Text = "20's" },
                       new SelectListItem { Value = "2" , Text = "30's" },
                       new SelectListItem { Value = "3" , Text = "40's" },
                       new SelectListItem { Value = "4" , Text = "50's" },
                       new SelectListItem { Value = "5" , Text = "60's" },
                       new SelectListItem { Value = "6" , Text = "70+" },
                    },
                  new { @class = "myselect" })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
</div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Orientation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Orientation,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = "Sexual Orientation" },
                       new SelectListItem { Value = "1" , Text = "Straight" },
                       new SelectListItem { Value = "2" , Text = "LGBT" },
                       new SelectListItem { Value = "3" , Text = "No Preference" },
                    },
                  new { @class = "myselect" })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FavoriteFoods, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FavoriteFoods, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FavoriteFoods, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AgePreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @Html.DropDownListFor(model => model.Age,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = " - - Age - - " },
                       new SelectListItem { Value = "1" , Text = "20's" },
                       new SelectListItem { Value = "2" , Text = "30's" },
                       new SelectListItem { Value = "3" , Text = "40's" },
                       new SelectListItem { Value = "4" , Text = "50's" },
                       new SelectListItem { Value = "5" , Text = "60's" },
                       new SelectListItem { Value = "6" , Text = "70+" },
                       new SelectListItem { Value = "7" , Text = "Everyone!" }
                    },
                  new { @class = "myselect" })
                @Html.ValidationMessageFor(model => model.AgePreference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SexualPreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SexualPreference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SexualPreference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PricePreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PricePreference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PricePreference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Continue" class="btn btn-default" />
                    <p>(Continue to Profile Picture)</p>
                </div>
            </div>
        </div>
    }
</div>