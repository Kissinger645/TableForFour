RestaurantType	American	
BBQ	
Chinese	
Cuban	
Delis	
Fast Food	
French	
German	
Italian	
Japanese	
Mediterranean	
Mexican		




<script src='http://code.jquery.com/jquery-latest.min.js' type='text/javascript'>
    $(function () {
        $(".item").first().addClass("active");
        $("ol.carousel-indicators").find("li").eq(0).addClass("active");
    })
</script>
<div class="container">
    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            @foreach (var couple in ViewBag.AllCouples)
            {
                <li data-target="#carousel-example-generic" data-slide-to=@couple.Id></li>
            }

        </ol>
        <div class="carousel-inner">
            @foreach (var couple in ViewBag.AllCouples)
            {
                <div class="item">
                    <img src="@couple.Image.FilePath" alt="@couple.NickName">
                </div>
            }
        </div>
        <!-- Controls -->
        <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left"></span>
        </a>
        <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right"></span>
        </a>
    </div> <!-- Carousel -->
</div>

===Likes from Tiny
public ActionResult Like(int id)
        {
            var userId = User.Identity.GetUserId();
            
            bool liked = db.Likes.Where(l => l.LinkId == id && l.LikerId == userId).Any();
            ViewBag.liked = liked;
            if (liked == false)
            {
                var linkId = db.Links.Where(l => l.Id == id).FirstOrDefault().Id;
                Like like = new Like
                {
                    LikerId = userId,
                    LinkId = id

                };
                db.Likes.Add(like);
                db.SaveChanges();
            }
            else
            {
                var like = db.Likes
                    .Where(l => l.LinkId == id && l.LikerId == userId).FirstOrDefault();
                db.Likes.Remove(like);
                db.SaveChanges();
            }
            return RedirectToAction("Likes", "Link");
        }			
		
	=== Cut from CoupleController until finished
		
		public ActionResult Like(string NickName)
        {
            var userName = User.Identity.GetUserName();
            bool liked = db.Match.Where(l => l.SecondCouple == CUserName && l.FirstCouple == userName).Any();
            ViewBag.liked = liked;
            if (liked == false)
            {
                var secCouple = db.Couples.Where(l => l.NickName == NickName).FirstOrDefault().Id;
                MatchedCouple match = new MatchedCouple
                {
                    FirstCouple = userId,
                    SecondCouple = secCouple,

                };
                db.Match.Add(match);
                db.SaveChanges();
            }
            else
            {
                var like = db.Match
                    .Where(l => l.SecondCouple == id && l.FirstCouple == userId).FirstOrDefault();
                db.Match.Remove(like);
                db.SaveChanges();
            }
            return View();
        }	
			default.jpg					