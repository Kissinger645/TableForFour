American BBQ Chinese Cuban Delis Fast Food	French	German	Italian	Japanese Mediterranean Mexican	

return RedirectToLocal(returnUrl);
	
<img src="~/Images/dinner-party-with-friends.jpg" style="background-size: cover" />

===From Meetways:
https://www.meetways.com/halfway/29681/29601/Mexican/d
<script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyAK38vWXwOcQLhJYItHF0CyFxXRSyWAYts&libraries=places"> </script>
<script type="text/javascript">
        var initialmapoptions = {"Address1":"29681","Address2":"29601","Address1Redirect":"29681","Address2Redirect":"29601","POI":"Mexican","AvoidHighways":false,"AvoidTollRoads":false,"TravelMode":"d","PoiID":null,"Route":"/halfway/29681/29601/Mexican/d","TravelModeEncoded":"d"};
    </script>

===Cut from AboutUs
<div class="form-group">
                @Html.LabelFor(model => model.AgePreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Age,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = " - - Age - - " },
                       new SelectListItem { Value = "20's" , Text = "20's" },
                       new SelectListItem { Value = "30's" , Text = "30's" },
                       new SelectListItem { Value = "40's" , Text = "40's" },
                       new SelectListItem { Value = "50's" , Text = "50's" },
                       new SelectListItem { Value = "60's" , Text = "60's" },
                       new SelectListItem { Value = "70+" , Text = "70+" },
                       new SelectListItem { Value = "Everyone!" , Text = "Everyone!" }
                    },
                  new { @class = "myselect" })
                    @Html.ValidationMessageFor(model => model.AgePreference, "", new { @class = "text-danger" })
                </div>
            </div>

			<div class="form-group">
                @Html.LabelFor(model => model.SexualPreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SexualPreference,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = "Sexual Orientation" },
                       new SelectListItem { Value = "Straight" , Text = "Straight" },
                       new SelectListItem { Value = "LGBT" , Text = "LGBT" },
                    },
                  new { @class = "myselect" })
                    @Html.ValidationMessageFor(model => model.SexualPreference, "", new { @class = "text-danger" })
                </div>
            </div>

===Cut from Couple Edit
 <div class="form-group">
                @Html.LabelFor(model => model.AgePreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Age,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = " - - Age - - " },
                       new SelectListItem { Value = "20's" , Text = "20's" },
                       new SelectListItem { Value = "30's" , Text = "30's" },
                       new SelectListItem { Value = "40's" , Text = "40's" },
                       new SelectListItem { Value = "50's" , Text = "50's" },
                       new SelectListItem { Value = "60's" , Text = "60's" },
                       new SelectListItem { Value = "70+" , Text = "70+" },
                       new SelectListItem { Value = "Everyone!" , Text = "Everyone!" }
                    },
                  new { @class = "myselect" })
                    @Html.ValidationMessageFor(model => model.AgePreference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SexualPreference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SexualPreference,
                  new List<SelectListItem> {
                      new SelectListItem { Value = "0" , Text = "Sexual Orientation" },
                       new SelectListItem { Value = "Straight" , Text = "Straight" },
                       new SelectListItem { Value = "LGBT" , Text = "LGBT" },
                       new SelectListItem { Value = "No Preference" , Text = "No Preference" },
                    },
                  new { @class = "myselect" })
                    @Html.ValidationMessageFor(model => model.SexualPreference, "", new { @class = "text-danger" })
                </div>
            </div>

